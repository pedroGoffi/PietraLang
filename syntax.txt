  SIMPLE
  COMPTIME
  NO MACROS
TODOS:
-- make the language syntax
-- make the compiler target <thinking of llvm intermediate representation>
-- make smart parrser <namespaces>

language used:
  * = more than one
  ? = optional

  Paser path:
expr_list     = expr (',' expr_list)*
operand_expr  = INT		|
	      FLOAT		|
	      STRING		|
	        NAME		|
		'(' expr ')'	|
		'{' expr_list '}'
		
base_expr     = operand_expr ('(' expr_list ')' | '[' expr ']' | '.' base_expr)*
unary_expr    = [+-&*!] unary_expr | base_expr
mul_op        = '*' | '/' | '%' | '<<' | '>>' | '&'
mul_expr      = unary_expr (mul_op unary_expr)*
add_op        = '+' |
	        '-' |
		'|' |
		'^'
add_expr      = mul_expr (add_op mul_expr)*
cmp_op        = LT '<' | LTEQ '<='| EQ '=='| NEQ '!=' | GT '>'| GTEQ '>='
cmp_expr      = add_expr (cmp_op add_expr)*
and_expr      = cmp_expr (AND cmp_expr)*
or_expr       = and_expr (OR and_expr)*
ternary_expr  = or_expr ('if' ternary_expr else' ternary_expr)*

where_body    = expr_list '=>' stmt
where_stmt    = "where" expr_list '{' where_body '}'
 
expr = ternary_expr 
